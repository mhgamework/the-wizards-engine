<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="11.5.1">
  <help_text/>
  <zoom_level>10</zoom_level>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>80</x>
      <y>90</y>
      <w>240</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>PositionElement
--
+Position : Vector3
--
Gives this object a position</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>460</x>
      <y>90</y>
      <w>300</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>WalkElement
--
+Goal : Vector3
+Moving : bool
+CanReach(Vector3 goal) : bool
+Speed : float
--
Responsible for storing state about 
the fact that this object can walk</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Note</type>
    <coordinates>
      <x>860</x>
      <y>80</y>
      <w>340</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>These are extensions 
for EngineObject's
--
A dependency from A to B indicates
that B will be attaches to the object
if A is attached.
--
Are these elements part of the engine facade?</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>50</x>
      <y>660</y>
      <w>820</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>SimulationContext
--
+ AttachDefaultWalk&lt;TObject&gt;() // Attaches WalkElement and simulates default walk behaviour
+ AttachDefaultMesh&lt;TObject&gt;()
+ AttachDefaultPosition&lt;TObject&gt;()
+ LoadMesh(String name) : IMesh
+ RaycastWorld(Ray r) : IEngineObject

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>90</x>
      <y>300</y>
      <w>240</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>MeshElement (ModelElement?)
--
+Mesh : IModel?
+Visible : bool
+Solid : bool
+Static : bool
--
Attaches a shape to this object</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>170</x>
      <y>170</y>
      <w>50</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>30;30;30;130</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>290</x>
      <y>120</y>
      <w>190</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>30;30;170;30</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Note</type>
    <coordinates>
      <x>930</x>
      <y>540</y>
      <w>270</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>These are required features for the 
elements, but they should be restructured.
Note that the MeshElement will probably 
always use the default implementation,
while the walkelement will require
customization.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>840</x>
      <y>540</y>
      <w>110</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=-
</panel_attributes>
    <additional_attributes>30;160;90;30</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>460</x>
      <y>340</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>/IModel/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>60</x>
      <y>500</y>
      <w>370</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Raycaster
--
+RaycastWorld(Ray r) : IEngineObject
--
Implements raycasting by collecting information
One way to raycast is by getting the mesh information</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>180</x>
      <y>400</y>
      <w>90</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>30;30;70;100</additional_attributes>
  </element>
</diagram>
